@mixin grid-column-width($columns, $grid: $default-grid) {
    $columns: _convert-to-media-map($columns, $grid);
    @include _for-media-map($columns, $grid) {
        $bp-columns: $_for-media-map-value;
        @if (($bp-columns == hidden) or ($bp-columns == hide) or ($bp-columns == 0)) {
            display: none;
        } @else {
            display: block;

            $driver: get-grid-value(driver, $grid);
            @if ($driver == flex) {
                max-width: _column-width($bp-columns, $grid);
            }
            width: _column-width($bp-columns, $grid);
        }
    }
}

@mixin grid-column-gutter($gutters, $grid: $default-grid) {
    $gutters: _convert-to-media-map($gutters, $grid);
    @include _for-media-map($gutters, $grid) {
        $bp-gutter: $_for-media-map-value;
        @if (type-of($bp-gutter) == number) {
            $grid-half-gutter: $bp-gutter / 2;
            padding-left: $grid-half-gutter;
            padding-right: $grid-half-gutter;
        } @else {
            @error "Invalid type of gutter. Gutter must be a number!";
        }
    }
}

@mixin grid-column-align($align-x: none, $align-y: none, $grid: $default-grid) {
    $driver: get-grid-value(driver, $grid);
    @if ($driver == flex) {
        // X-axis alignment
        @if ($align-x != none) {
            $align-x: _convert-to-media-map($align-x, $grid);
            @include _for-media-map($align-x, $grid) {
                $bp-align-x: $_for-media-map-value;
                @if ($bp-align-x == left) {
                    margin-right: auto;
                    margin-left: 0;
                } @else if ($bp-align-x == right) {
                    margin-left: auto;
                    margin-right: 0;
                } @else if ($bp-align-x == center) {
                    margin-left: auto;
                    margin-right: auto;
                } @else {
                    @error "Unknown $align-x value: '#{$bp-align-x}'";
                }
            }
        }

        // Y-axis alignment
        @if ($align-y != none) {
            $align-y: _convert-to-media-map($align-y, $grid);
            @include _for-media-map($align-y, $grid) {
                $bp-align-y: $_for-media-map-value;
                $allowed-align-y-values: (flex-start, flex-end, center, baseline, stretch, auto);
                @if ($bp-align-y == top) {
                    align-self: flex-start;
                } @else if ($bp-align-y == bottom) {
                    align-self: flex-end;
                } @else if (index($allowed-align-y-values, $bp-align-y) != null) {
                    align-self: $bp-align-y;
                } @else {
                    @error "Unknown $align-y value: '#{$bp-align-y}'";
                }
            }
        }
    }
}

// common styles of grid-column
%_grid-column-base {
    box-sizing: border-box;
    min-height: 1px;
}

// flex based grid-column
@mixin grid-column--flex($columns, $align-x: none, $align-y: none, $order: none, $grid: $default-grid) {
    @extend %_grid-column-base;
    @include grid-column-width($columns: $columns, $grid: $grid);
    @include grid-column-align($align-y: $align-y, $align-x: $align-x, $grid: $grid);
    @include grid-column-gutter($gutters: get-grid-value(gutter, $grid), $grid: $grid);
}

// float based grid-column
@mixin grid-column--float($columns, $grid: $default-grid) {
    @extend %_grid-column-base;
    @include grid-column-width($columns: $columns, $grid: $grid);
    @include grid-column-gutter($gutters: get-grid-value(gutter, $grid), $grid: $grid);

    $reversed: get-grid-value(reversed, $grid);
    @if $reversed == true {
        float: right;
    } @else {
        float: left;
    }
}

@mixin grid-column($columns, $align-x: none, $align-y: none, $grid: $default-grid) {
    $driver: get-grid-value(driver, $grid);
    @if ($driver == flex) {
        @include grid-column--flex($columns, $align-x, $align-y, $grid);
    } @else if ($driver == float) {
        @include grid-column--float($columns, $grid);
    } @else {
        @error "Incorrect driver value: '#{$driver}'";
    }
}
