// flex driver based grid-container
%_grid-container--flex {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
}

@mixin grid-container--flex($grid: $default-grid) {
    @extend %_grid-container--flex;

    flex-wrap: get-grid-value(wrap, $grid);

    $collapse: get-grid-value(collapse, $grid);
    $align-x: get-grid-value(align-x, $grid);
    $align-y: get-grid-value(align-y, $grid);
    $reversed: get-grid-value(reversed, $grid);

    // collapse
    @if ($collapse == true) {
        @include grid-collapse($grid);
    }

    // X-axis alignment
    @if ($align-x == left and $reversed == false) or
        ($align-x == right and $reversed == true) {
        justify-content: flex-start;
    } @else if ($align-x == left and $reversed == true) or
               ($align-x == right and $reversed == false) {
        justify-content: flex-end;
    } @else {
        justify-content: $align-x;
    }

    // Y-axis alignment
    @if ($align-y == top) {
        align-items: flex-start;
    } @else if ($align-y == bottom) {
        align-items: flex-end;
    } @else {
        align-items: $align-y;
    }

    // Reverse
    @if $reversed == true {
        flex-direction: row-reverse;
    } @else {
        flex-direction: row;
    }
}

// float driver based grid-container
%_grid-container--float {
    box-sizing: border-box;
    overflow-x: hidden;
    &::after {
        content: ' ';
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
}

@mixin grid-container--float($grid: $default-grid) {
    @extend %_grid-container--float;

    // collapse
    $collapse: get-grid-value(collapse, $grid);
    @if ($collapse == true) {
        @include grid-collapse($grid);
    }
}

//common grid-container mixin
@mixin grid-container($grid: $default-grid) {
    $driver: map-get($grid, driver);
    @if ($driver == flex) {
        @include grid-container--flex($grid);
    } @else if ($driver == float) {
        @include grid-container--float($grid);
    } @else {
        @error "[ERROR]: Incorrect driver value: '#{$driver}'";
    }
}
